#BlueJ class context
comment0.target=Chord
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Chord\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=Chord()
comment10.params=reference
comment10.target=java.lang.String\ getMode(java.lang.String)
comment11.params=reference
comment11.target=java.lang.String\ getType(java.lang.String)
comment12.params=reference
comment12.target=java.lang.String\ getAdditional(java.lang.String)
comment13.params=reference
comment13.target=java.lang.String\ getInversion(java.lang.String)
comment14.params=toInvert\ inversionNumber
comment14.target=java.lang.String[]\ invert(java.lang.String[],\ int)
comment15.params=reference\ notes
comment15.target=java.lang.String[]\ interpretNotes(java.lang.String[],\ int[])
comment16.params=chord\ reference\ add
comment16.target=java.lang.String[]\ interpretAdditional(java.lang.String[],\ java.lang.String[],\ int)
comment17.params=chordType
comment17.target=int[]\ getNotes(java.lang.String)
comment18.params=check
comment18.target=boolean\ isValidDegree(char)
comment19.params=check
comment19.target=boolean\ isNumber(char)
comment2.params=type\ scale
comment2.target=Chord(java.lang.String,\ Scale)
comment3.params=toCheck
comment3.target=boolean\ isInvalidType(java.lang.String)
comment4.params=interpret
comment4.target=Chord\ interpretChord(java.lang.String)
comment5.params=check
comment5.target=boolean\ isMinor(Chord)
comment6.params=note
comment6.target=java.lang.String\ getPrevious(java.lang.String)
comment7.params=check
comment7.target=java.lang.String[]\ eliminateDuplicate(java.lang.String[])
comment8.params=reference\ check\ stop
comment8.target=boolean\ contains(java.lang.String[],\ java.lang.String,\ int)
comment9.params=reference
comment9.target=java.lang.String\ getKey(java.lang.String)
numComments=20
